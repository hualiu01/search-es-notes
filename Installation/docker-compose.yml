version: '3.8'

name: local_es_kibana

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.1
    container_name: elasticsearch
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD} # docker-compose auto reads .env in the same folder
      - discovery.type=single-node
      - xpack.security.http.ssl.enabled=false
      - xpack.license.self_generated.type=trial
    networks:
      - elastic-net
    ports:
      - "127.0.0.1:9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:9200/_cluster/health?wait_for_status=yellow"]
      interval: 10s
      retries: 5
    
  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - xpack.security.enabled=false
      - xpack.license.self_generated.type=trial
    networks:
      - elastic-net
    ports:
      - "127.0.0.1:5601:5601"
    depends_on:
      - elasticsearch

networks:
  elastic-net:
    driver: bridge # a custom bridge network instead of using Dockerâ€™s default bridge

volumes:  # In Docker, volumes are used to store data generated by the container that you want to persist even after the container is stopped or removed.
  es_data: